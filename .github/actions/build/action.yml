name: 'Build'
description: 'Build and package Synergy'

inputs:
  target-name:
    type: string
    required: true
    description: "The name of the target being built (e.g. windows-2022-x64)."
  target-arch:
    type: string
    required: true
    description: "The architecture of the target being built (e.g. x86_64, arm64)."
  cmake-args:
    type: string
    required: false
    description: "Additional CMake arguments to pass to the configure step."

outputs:
  version:
    description: 'The version of the build'
    value: ${{ steps.get-version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: Setup variables
      id: vars
      shell: bash
      run: |
        case "${{ runner.os }}" in
          "Windows")
            cmake_args="--preset=windows-release"
            ;;

          "macOS")
            cmake_args="$cmake_args --preset=macos-release"
            cmake_args="$cmake_args -DCMAKE_OSX_SYSROOT=/Applications/Xcode_15.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
            ;;

          "Linux")
            cmake_args="$cmake_args --preset=linux-release"
            cmake_args="$cmake_args -DCMAKE_INSTALL_PREFIX=/usr"
            ;;
        esac

        cmake_args="$cmake_args -DUSE_TOMLPLUSPLUS=OFF -DUSE_CLI11=OFF"
        cmake_args="$cmake_args ${{ inputs.cmake-args }}"

        echo "cmake-args=$cmake_args" >> $GITHUB_OUTPUT

    # By default, workspace dir is not trusted by Git on containers.
    - name: Setup Git (Linux)
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: git config --global --add safe.directory $GITHUB_WORKSPACE

    - name: Install dependencies
      id: get-deps
      uses: ./.github/actions/install-deps

    - name: Configure
      shell: bash
      run: cmake -B build ${{ steps.vars.outputs.cmake-args }} ${{ steps.get-deps.outputs.vcpkg-cmake-config }}

    - name: Build
      shell: bash
      run: cmake --build build -j8
